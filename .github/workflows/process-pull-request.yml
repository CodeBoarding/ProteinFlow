name: Run pytest

on:
  pull_request:
    branches: [ main ]

env:
  MY_REF: ${{ format('refs/heads/{0}', github.event.pull_request.head.ref) }}
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  PYTHONIOENCODING: utf-8

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: ["3.10"]
        os: [windows-latest]

    steps:
      - name: Check if relevant files have changed
        uses: actions/github-script@0.9.0
        id: service-changed
        with:
          result-encoding: string
          script: |
            const result = await github.pulls.listFiles({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.number,
              per_page: 100
            })
            const serviceChanged = result.data.filter(f => f.filename.startsWith("proteinflow/")).length > 0
            console.log(serviceChanged)
            return serviceChanged
      - uses: actions/checkout@v3
        if: ${{ steps.service-changed.outputs.result == 'true' }}
        with:
            ref: ${{ env.MY_REF}}
            fetch-depth: 0
      - name: Launch conda in Windows
        if: ${{ steps.service-changed.outputs.result == 'true' && matrix.os == 'windows-latest'}}
        run: |
          C:\Miniconda\condabin\conda.bat init powershell
      - name: Set conda call in windows
        if: ${{ steps.service-changed.outputs.result == 'true' && matrix.os == 'windows-latest'}}
        run: |
          echo ("CONDA_CALL=C:\Miniconda\condabin\conda.bat") >> $env:GITHUB_ENV
      - name: Set conda call in Linux / Mac OS
        if: ${{ steps.service-changed.outputs.result == 'true' && matrix.os != 'windows-latest'}}
        run: |
          echo "CONDA_CALL=conda" >> $GITHUB_ENV
      - name: Install dependencies
        if: ${{ steps.service-changed.outputs.result == 'true' }}
        run: |
          C:\Miniconda\condabin\conda.bat update conda -y
          C:\Miniconda\condabin\conda.bat create --name proteinflow -y python=${{ matrix.version }}
          C:\Miniconda\condabin\conda.bat install -n proteinflow -c conda-forge -c bioconda mmseqs2
          C:\Miniconda\condabin\conda.bat run -n proteinflow python -m pip install torch --extra-index-url https://download.pytorch.org/whl/cpu
          C:\Miniconda\condabin\conda.bat run -n proteinflow python -m pip install awscli pytest flake8
          C:\Miniconda\condabin\conda.bat run -n proteinflow python -m pip install numpy
          C:\Miniconda\condabin\conda.bat run -n proteinflow python -m pip install "rcsbsearch @ git+https://github.com/sbliven/rcsbsearch@dbdfe3880cc88b0ce57163987db613d579400c8e"
          C:\Miniconda\condabin\conda.bat run -n proteinflow python -m pip install -e .
      - name: Test with pytest
        if: ${{ steps.service-changed.outputs.result == 'true' }}
        run: |
          C:\Miniconda\condabin\conda.bat run -n proteinflow pytest tests
